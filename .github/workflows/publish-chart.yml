name: Package & Publish 3rd Chart
run-name: "Package & Publish ${{ inputs.chart-name }} chart"
on:
  workflow_dispatch:
    inputs:
      chart-name:
        description: >
            3rd chart name (under "bitnami" folder)
            Need to add "-chart" in the name in Chart.yaml
        type: string
        required: true
      
permissions:
    id-token: write
    contents: read

jobs:
  publish:
    name: Publish chart to ECR
    runs-on: arc-runner-eks-small
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - id: install-aws-cli
      name: Install awscli
      uses: unfor19/install-aws-cli-action@v1
      with:
        version: 2     
        verbose: false            
        arch: amd64
    - name: Install yq
      uses: dcarbone/install-yq-action@v1.3.1
      with:
        version: v3
    - name: Authenticate to AWS
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::702886132326:role/cfy-developers-github-actions-role
        aws-region: eu-west-1
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Sync image to ECR
      working-directory: bitnami/${{ inputs.chart-name }}
      run: |
        IMAGE_PATHS=$(yq eval '.. | select(has("repository") and has("tag")) | path | join(".")' values.yaml)
        for IMAGE_PATH in $IMAGE_PATHS; do
          REGISTRY=$(yq eval ".$IMAGE_PATH.registry // \"docker.io\"" values.yaml)
          REPOSITORY=$(yq eval ".$IMAGE_PATH.repository" values.yaml)
          TAG=$(yq eval ".$IMAGE_PATH.tag" values.yaml)
        
          if [[ -z "$REPOSITORY" || -z "$TAG" ]]; then
            echo "Details not found at path: $IMAGE_PATH"
            continue
          fi
        
          IMAGE="$REGISTRY/$REPOSITORY:$TAG"
          echo "Processing image: $IMAGE"
                        
          # Define target ECR image
          TARGET_IMAGE="702886132326.dkr.ecr.eu-west-1.amazonaws.com/$REPOSITORY:$TAG"

          # Check if the image already exists in ECR
          if aws ecr describe-images --repository-name "$REPOSITORY" --image-ids imageTag="$TAG" > /dev/null 2>&1; then
            echo "Image already exists in ECR: $TARGET_IMAGE" | tee -a "$GITHUB_STEP_SUMMARY"
            continue
          fi

          # Pull the image from docker Hub
          docker pull "$IMAGE"
          
          # Tag and push the image to ECR
          docker tag "$IMAGE" "$TARGET_IMAGE"
          docker push "$TARGET_IMAGE"
                
          echo "Successfully processed and pushed: $IMAGE to $TARGET_IMAGE" | tee -a "$GITHUB_STEP_SUMMARY"
        done
        yq eval ".global.image.registry = \"702886132326.dkr.ecr.eu-west-1.amazonaws.com\"" -i values.yaml
    
    - name: Publish Chart to ECR
      working-directory: bitnami/${{ inputs.chart-name }}
      run: |
        CHART_VERSION=$(grep '^version:' Chart.yaml | awk '{print $2}')
        helm package -u --version $CHART_VERSION --dependency-update .
        helm push ${{ inputs.chart-name }}-chart-$CHART_VERSION.tgz oci://702886132326.dkr.ecr.eu-west-1.amazonaws.com/bitnami
        echo "Chart Version Published: $CHART_VERSION" >> "$GITHUB_STEP_SUMMARY"
        
