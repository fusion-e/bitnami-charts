name: Package & Publish 3rd Chart
run-name: "Package & Publish ${{ inputs.chart-name }} chart"
on:
  push:
    branches:
      - usr/shayki/deploy-wf
  workflow_dispatch:
    inputs:
      chart-name:
        description: 3rd chart name (under "bitnami" folder)
        type: string
        required: true
      cluster-name:
        description: k8s cluster name
        type: string
        default: dell-eks-dev
        required: true

permissions:
    id-token: write
    contents: read

jobs:
  deploy:
    runs-on: arc-runner-eks-small
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - id: install-aws-cli
      uses: unfor19/install-aws-cli-action@v1
      with:
        version: 2              
        verbose: false            
        arch: amd64
    - uses: chrisdickinson/setup-yq@latest
    - name: Authenticate to AWS
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::702886132326:role/cfy-developers-github-actions-role
        aws-region: eu-west-1
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
    - name: Sync docker image to ECR
      run: |
        REGISTRY=$(yq eval '.image.registry' values.yaml)
        REPOSITORY=$(yq eval '.image.repository' values.yaml)
        TAG=$(yq eval '.image.tag' values.yaml)
        
        if [[ -z "$REGISTRY" || -z "$REPOSITORY" || -z "$TAG" ]]; then
          echo "Details not found in values.yaml"
          exit 1
        fi
        
        IMAGE="$REGISTRY/$REPOSITORY:$TAG"
        
        docker pull "$IMAGE"
        
        TARGET_IMAGE="702886132326.dkr.ecr.eu-west-1.amazonaws.com/$(basename bitnami/neo4j):$TAG"
        docker tag "$IMAGE" "$TARGET_IMAGE"
        
        docker push "$TARGET_IMAGE"
      
        yq eval ".image.registry = \"702886132326.dkr.ecr.eu-west-1.amazonaws.com\"" -i values.yaml

    - name: Deploy Chart
      working-directory: bitnami/neo4j
      run: |
        CHART_VERSION=$(grep '^version:' Chart.yaml | awk '{print $2}')
        helm package -u --version $CHART_VERSION --dependency-update .
        helm push neo4j-$CHART_VERSION.tgz oci://702886132326.dkr.ecr.eu-west-1.amazonaws.com